<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>gov.nasa.jpl.mbee</groupId>
    <artifactId>mms-ent</artifactId>
    <version>3.0.0-rc2</version>
    <name>Alfresco Repository and Share Quickstart with database and an embedded Tomcat runner.</name>
    <description>This All-in-One project allows to manage all the components involved in Alfresco development (Repo, Share, Solr4, AMPs) in one project
    </description>
    <packaging>pom</packaging>

    <!-- SDK properties have sensible defaults in the SDK parent, but you can
        override the properties below to use another version. For more available
        properties see the alfresco-sdk-parent POM. -->
    <properties>
        <!-- The following are default values for data location, Alfresco Community
            version, and Records Management Module version. Uncomment if you need to
            change (Note. current default version for Enterprise edition is 5.0.1) -->
        <alfresco.version>5.0.d</alfresco.version>
        <alfresco.rm.version>2.3</alfresco.rm.version>
        <!-- <alfresco.data.location>alf_data_dev</alfresco.data.location> -->

        <!-- This control the root logging level for all apps uncomment and change,
            defaults to WARN <app.log.root.level>WARN</app.log.root.level> -->

        <!-- Set the enviroment to use, this controls which properties will be
            picked in src/test/properties for embedded run, defaults to the 'local' environment.
            See SDK Parent POM for more info. -->
        <env>local</env>

        <!-- The Alfresco Share web application is accessible via this URL -->
        <share.client.url>http://localhost:8080/share</share.client.url>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <parent>
        <groupId>org.alfresco.maven</groupId>
        <artifactId>alfresco-sdk-parent</artifactId>
        <version>2.1.1</version>
    </parent>

    <!-- Here we realize the connection with the Alfresco selected platform
        (e.g.version and edition) -->
    <dependencyManagement>
        <dependencies>
            <!-- This will import the dependencyManagement for all artifacts in the
                selected Alfresco plaftorm (see http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies)
                NOTE: You still need to define dependencies in your POM, but you can omit
                version as it's enforced by this dependencyManagement. NOTE: It defaults
                to the latest version this SDK pom has been tested with, but alfresco version
                can/should be overridden in your project's pom -->
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>alfresco-platform-distribution</artifactId>
                <version>${alfresco.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <!-- use mvn -U deploy -DgeneratePom=true -Dpackaging=jar -->
        <repository>
            <id>cae-release</id>
            <name>cae-releases</name>
            <url>https://cae-artifactory.jpl.nasa.gov/artifactory/libs-release-local</url>
        </repository>
        <snapshotRepository>
            <id>cae-snapshots</id>
            <name>cae-snapshots</name>
            <url>https://cae-artifactory.jpl.nasa.gov/artifactory/libs-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>alfresco-public</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
        </repository>
        <repository>
            <id>alfresco-public-snapshots</id>
            <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <plugins>
            <!-- Compress JavaScript files and store as *-min.js -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <configuration>
                    <jswarn>false</jswarn>
                    <encoding>UTF-8</encoding>
                    <!-- <includes> <include>**/*.js</include> </includes> -->
                    <!-- We don't need to re-minify YUI or 3rd party libs -->
                    <excludes>
                        <exclude>**/*.js</exclude>
                        <exclude>**/WEB-INF/**</exclude>
                        <exclude>**/tiny_mce/**</exclude>
                        <exclude>**/yui/**</exclude>
                        <exclude>js/lib/dojo*/**</exclude>
                        <exclude>**/log4javascript*.js</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.alfresco.maven.plugin</groupId>
                <artifactId>alfresco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>js</nonFilteredFileExtension>
                        <nonFilteredFileExtension>css</nonFilteredFileExtension>
                        <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                        <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                        <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                        <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Invoke your build with -Prun to run the multimodule project and enable
                rapid dev mode in your IDE. See 'run' profile in the sub modules pom.xml
                for further behavioral details. -->
            <id>run</id>
            <properties>
                <!-- While running in rapid dev mode with -Prun, we don't want amp web
                    resources to be added to the war, so we can load them directly from the AMP
                    project (see runner/tomcat/context-*.xml for more details) -->
                <maven.alfresco.includeWebResources>false</maven.alfresco.includeWebResources>
            </properties>
        </profile>
    </profiles>
    <modules>
        <module>repo-amp</module>
        <module>share-amp</module>
        <module>repo</module>
        <module>solr-config</module>
        <module>share</module>
        <module>runner</module>
    </modules>
</project>
